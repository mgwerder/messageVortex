<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.messagevortex</groupId>
    <artifactId>application-core-library</artifactId>
    <version>0.4.0</version>

    <!-- Output to jar format -->
    <packaging>jar</packaging>
    <properties>
        <jdk.version>1.8</jdk.version>
        <junit.version>5.7.1</junit.version>
        <jacoco.version>0.8.7</jacoco.version>
        <surefire.version>2.22.2</surefire.version>
        <checkstyle.version>3.1.2</checkstyle.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <argLine>-ea</argLine>
        <jacoco.ArgLine/>

        <git-commit-id-plugin.version>4.0.4</git-commit-id-plugin.version>
        <git.commit.id>none</git.commit.id>

        <!-- sonar properties -->
        <sonar.projectKey>net.gwerder.java:messagevortex</sonar.projectKey>
        <sonar.working.directory>target/sonar</sonar.working.directory>
        <sonar.projectName>MessageVortex</sonar.projectName>
        <sonar.projectVersion>${project.version}</sonar.projectVersion>
        <sonar.language>java</sonar.language>
        <sonar.sources>src/main/java,src/test/java</sonar.sources>
        <sonar.inclusions>**/*.java</sonar.inclusions>
        <sonar.exclusions>src/test/java/**/*.java</sonar.exclusions>
        <sonar.java.source>${jdk.version}</sonar.java.source>
        <sonar.java.binaries>target/classes</sonar.java.binaries>
        <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
        <sonar.jacoco.reportPaths>target/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.junit.reportsPaths>target/surefire-reports</sonar.junit.reportsPaths>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.surefire.reportsPath>target/surefire-reports</sonar.surefire.reportsPath>
        <sonar.tests>src/test/java</sonar.tests>
        <sonar.doxygen.generateDocumentation>enable</sonar.doxygen.generateDocumentation>
        <sonar.doxygen.generateClassGraphs>true</sonar.doxygen.generateClassGraphs>
        <sonar.doxygen.generateCallerGraphs>true</sonar.doxygen.generateCallerGraphs>
        <sonar.doxygen.generateCallGraphs>true</sonar.doxygen.generateCallGraphs>
        <sonar.java.libraries>${izpack.staging}/lib/*.jar</sonar.java.libraries>
        <sonar.technicalDebt.developmentCost>5</sonar.technicalDebt.developmentCost>
        <sonar.issues.defaultAssigneeLogin>mgwerder</sonar.issues.defaultAssigneeLogin>
        <sonar.scm.disabled>true</sonar.scm.disabled>
        <sonar.verbose>true</sonar.verbose>
        <sonar.sonargraph.report.path>target/sonargraph</sonar.sonargraph.report.path>

        <izpack.version>5.1.3</izpack.version>
        <izpack.staging>${project.build.directory}/staging</izpack.staging>
        <izpack.src>${basedir}/src/main/izpack/</izpack.src>

    </properties>

    <repositories>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <repository>
            <id>mavencentral</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>jenkins</id>
            <url>https://repo.jenkins-ci.org/releases/</url>
        </repository>
    </repositories>


    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://messagevortex.net/devel/repo/application-core-library/src/main/resources/LICENSE.md</url>
            <distribution>site</distribution>
            <comments>A very permissive OSS license</comments>
        </license>
    </licenses>

    <url>https://messagevortex.net</url>

    <pluginRepositories>
        <pluginRepository>
            <id>central-repo</id>
            <name>central</name>
            <url>https://mvnrepository.com/artifact/</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>2.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>3.3.9</version>
        </dependency>

        <!--<dependency>
            <groupId>org.codehaus.izpack</groupId>
            <artifactId>izpack-maven-plugin</artifactId>
            <version>${izpack.version}</version>
            <scope>compile</scope>
            <type>pom</type>
        </dependency>-->

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>5.2.3</version>
        </dependency>

        <!-- Required for TestSmtpHandler -> FIXME get rid of it ASAP -->
        <dependency>
            <groupId>com.icegreen</groupId>
            <artifactId>greenmail</artifactId>
            <version>1.6.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.30</version>
            <!--<scope>compile</scope>-->
        </dependency>

        <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>9.2.17.0</version>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15to18</artifactId>
            <version>1.68</version>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.68</version>
        </dependency>

        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.6.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>3.1.2</version>
            <type>maven-plugin</type>
        </dependency>
    </dependencies>

    <build>
        <finalName>MessageVortex</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.40</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git-commit-id-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <compilerArgument>-proc:none</compilerArgument>
                            <includes>
                                <include>net/messagevortex/asn1/annotator/*.java</include>
                                <!--include all dependencies required  -->
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-project</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test*</include>
                    </includes>
                    <argLine>${argLine} @{argLine} ${jacoco.ArgLine}</argLine>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire.version}</version>
                <executions>
                    <execution>
                        <id>default-integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/classes/</outputDirectory>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                                <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                                <nonFilteredFileExtension>cfg</nonFilteredFileExtension>
                                <nonFilteredFileExtension>der</nonFilteredFileExtension>
                                <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                                <nonFilteredFileExtension>png</nonFilteredFileExtension>
                                <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                                <nonFilteredFileExtension>icns</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-staging-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>publish-artifacts</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>/var/www/messagevortex/devel/artifacts/${env.BRANCH_NAME}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <include>*.jar</include>
                                    <include>*.exe</include>
                                    <include>*.dmg</include>
                                    <include>*.zip</include>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/maven-archiver/</directory>
                                    <include>*.properties</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>net.messagevortex.MessageVortex</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <classifier>core</classifier>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>net.messagevortex.MessageVortex</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.6.0.1398</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
                <!--<dependencies>
                    <dependency>
                        <groupId>lt.velykis.maven.skins</groupId>
                        <artifactId>reflow-velocity-tools</artifactId>
                        <version>1.1.1</version>
                    </dependency>-->
                    <!-- Reflow skin requires Velocity >= 1.7  -->
                    <!--<dependency>
                        <groupId>org.apache.velocity</groupId>
                        <artifactId>velocity</artifactId>
                        <version>1.7</version>
                    </dependency>
                </dependencies>-->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <failOnWarnings>false</failOnWarnings>
                    <tags>
                        <tag>
                            <name>FIXME</name>
                            <placement>a</placement>
                            <head>FIXME:</head>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.doxia</groupId>
                <artifactId>doxia-maven-plugin</artifactId>
                <version>1.1.4</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>render-books</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <books>
                        <book>
                            <directory>src/books/adminGuide</directory>
                            <descriptor>src/books/adminGuide.xml</descriptor>
                            <formats>
                                <format>
                                    <id>pdf</id>
                                </format>
                                <format>
                                    <id>rtf</id>
                                </format>
                            </formats>
                        </book>
                    </books>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.izpack</groupId>
                <artifactId>izpack-maven-plugin</artifactId>
                <version>${izpack.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>installer-packaging</id>
                        <phase>package</phase>
                        <goals>
                            <goal>izpack</goal>
                        </goals>
                        <configuration>
                            <!-- base for relative paths in izpack descriptor -->
                            <baseDir>${izpack.staging}</baseDir>
                            <installFile>${basedir}/src/main/izpack/install.xml</installFile>
                            <mkdirs>true</mkdirs>
                            <finalName>MessageVortex-package</finalName>
                            <classifier>installer</classifier>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.izpack</groupId>
                        <artifactId>izpack-panel</artifactId>
                        <version>${izpack.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies-izpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${izpack.staging}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib-runtimes</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${izpack.staging}">
                                    <fileset dir="target" includes="messagevortex.jar"/>
                                    <fileset dir="src/main/resources/" includes="LICENSE.md"/>
                                </copy>
                                <copy todir="${izpack.staging}/resources">
                                    <fileset dir="src/main/izpack/resources"/>
                                    <fileset dir="src/main/resources/images/" includes="MessageVortexLogo*.png"/>
                                    <fileset dir="src/main/resources/images/" includes="MessageVortexLogo*.ico"/>
                                    <fileset dir="src/main/resources/images/" includes="MessageVortexLogo*.icns"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-staging</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${izpack.staging}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>1.7.25</version>
                <executions>
                    <execution>
                        <id>l4j-create-exe</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <dontWrapJar>false</dontWrapJar>
                            <outfile>${project.build.directory}/MessageVortex-package-installer.exe</outfile>
                            <jar>${basedir}/target/MessageVortex-package-installer.jar</jar>
                            <objs>
                                <obj>${izpack.staging}/resources/launch4j/w32api/crt2.o</obj>
                                <obj>${izpack.staging}/resources/launch4j/head/guihead.o</obj>
                                <obj>${izpack.staging}/resources/launch4j/head/head.o</obj>
                            </objs>
                            <libs>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libmingw32.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libgcc.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libmsvcrt.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libkernel32.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libuser32.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libadvapi32.a</lib>
                                <lib>${izpack.staging}/resources/launch4j/w32api/libshell32.a</lib>
                            </libs>
                            <icon>${izpack.staging}/resources/MessageVortexLogo_128.ico</icon>
                            <classPath>
                                <mainClass>net.messagevortex.MessageVortex</mainClass>
                                <addDependencies>true</addDependencies>
                                <preCp>anything</preCp>
                            </classPath>
                            <jre>
                                <path>${java.home}</path>
                                <bundledJre64Bit>false</bundledJre64Bit>
                                <bundledJreAsFallback>false</bundledJreAsFallback>
                                <minVersion>1.8.0</minVersion>
                                <jdkPreference>preferJre</jdkPreference>
                                <runtimeBits>64/32</runtimeBits>
                            </jre>
                            <versionInfo>
                                <fileVersion>${project.version}.0</fileVersion>
                                <txtFileVersion>${project.version}-${git.commit.id}</txtFileVersion>
                                <fileDescription>A MessageVortex installer</fileDescription>
                                <copyright>Copyright 2019 Martin Gwerder</copyright>
                                <productVersion>${project.version}.0</productVersion>
                                <txtProductVersion>${project.version}-${git.commit.id}</txtProductVersion>
                                <productName>MessageVortex</productName>
                                <internalName>vortex</internalName>
                                <originalFilename>MessaageVortex-package-install.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin> -->

            <plugin>
                <groupId>com.jolira</groupId>
                <artifactId>onejar-maven-plugin</artifactId>
                <version>1.4.4</version>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>one-jar</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>


            <!-- <plugin>
                <groupId>sh.tak.appbundler</groupId>
                <artifactId>appbundle-maven-plugin</artifactId>
                <version>1.1.1</version>
                <configuration>
                    <mainClass>net.messagevortex.MessageVortex</mainClass>
                    <generateDiskImageFile>true</generateDiskImageFile>-->
            <!-- Removed as it caused problems when building in jenkins (drove me mad)-->
            <!--<iconFile>images/MessageVortexLogo_128.icns</iconFile>-->
            <!--</configuration>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>bundle</goal>
                    </goals>
                </execution>
            </executions>
        </plugin> -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.7</version>
                <configuration>
                    <propertyName>jacoco.ArgLine</propertyName>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <!--<configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>-->
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <reporting>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
                <configuration>
                    <configLocation>google_checks.xml</configLocation>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

        </plugins>
    </reporting>

</project>
