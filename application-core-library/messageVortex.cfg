[default]
// ******************************************************************************
// name: transport_setup
// ******************************************************************************
// A comma separated list of transport endpoints sections (senders and 
// receivers) 
// ******************************************************************************
// default: default
transport_setup = dummy1, dummy2, dummy3, dummy4, dummy5, dummy6, dummy7, dummy8, dummy9, dummy10, client_transport, client_transport2, vortex_infrastructure

// ******************************************************************************
// name: blender_setup
// ******************************************************************************
// A comma separated list of  blender sections
// ******************************************************************************
// default: default
blender_setup = dummy_blender, initial_blender, upstream_blender

// ******************************************************************************
// name: router_setup
// ******************************************************************************
// A comma separated list of  router sections
// ******************************************************************************
// default: default
router_setup = router

// ******************************************************************************
// name: accountant_setup
// ******************************************************************************
// A comma separated list of accountant sections
// ******************************************************************************
// default: default
accountant_setup = dummy_accountant

// ******************************************************************************
// name: credential_source_setup
// ******************************************************************************
// The credential source setup section to be used
// ******************************************************************************
// default: null
credential_source_setup = credentials

// ******************************************************************************
// name: identity_store_setup
// ******************************************************************************
// The identity store sections to be set up
// ******************************************************************************
// default: null
identity_store_setup = is_dummy1,is_dummy2,is_dummy3,is_dummy4,is_dummy5,is_dummy6,is_dummy7,is_dummy8,is_dummy9

// ******************************************************************************
// name: recipe_setup
// ******************************************************************************
// The recipe sections to be set up
// ******************************************************************************
// default: null

// ******************************************************************************
// name: accounting_implementation
// ******************************************************************************
// accounting class to be used
// ******************************************************************************
// default: net.messagevortex.accounting.AccountingImplementation

// ******************************************************************************
// name: router_implementation
// ******************************************************************************
// router class to be used
// ******************************************************************************
// default: net.messagevortex.router.SimpleRouterImplementation

// ******************************************************************************
// name: blender_implementation
// ******************************************************************************
// blender class to be used
// ******************************************************************************
// default: null

// ******************************************************************************
// name: router
// ******************************************************************************
// the section name of the respective router implementation
// ******************************************************************************
// default: router

// ******************************************************************************
// name: forward_transport
// ******************************************************************************
// section of the forwarding transport client
// ******************************************************************************
// default: null

// ******************************************************************************
// name: node_identity
// ******************************************************************************
// the name of the node identity to be used
// ******************************************************************************
// default: local_node

// ******************************************************************************
// name: identity_store
// ******************************************************************************
// the section name of the identitty store
// ******************************************************************************
// default: default_identity_store

// ******************************************************************************
// name: transport_endpoint_receiver
// ******************************************************************************
// The class name of the transport receiver
// ******************************************************************************
// default: net.messagevortex.transport.pop.Pop3Receiver

// ******************************************************************************
// name: transport_endpoint_sender
// ******************************************************************************
// The class name of the transport sender
// ******************************************************************************
// default: net.messagevortex.transport.smtp.SmtpSender

// ******************************************************************************
// name: transport_implementation
// ******************************************************************************
// The class name of the transport impementation
// ******************************************************************************
// default: null

// ******************************************************************************
// name: blender
// ******************************************************************************
// The section name of the upstream blender
// ******************************************************************************
// default: blender

// ******************************************************************************
// name: accountant
// ******************************************************************************
// The section name of the accountant to be used
// ******************************************************************************
// default: null

// ******************************************************************************
// name: transport_id
// ******************************************************************************
// ID of the endpoint
// ******************************************************************************
// default: null

// ******************************************************************************
// name: recipes
// ******************************************************************************
// comma separated list of recipe class names
// ******************************************************************************
// default: null
recipes = net.messagevortex.blender.recipes.SimplePathRecipe

// ******************************************************************************
// name: filename
// ******************************************************************************
// The filename of the file to be loaded
// ******************************************************************************
// default: null

// ******************************************************************************
// name: accounting
// ******************************************************************************
// The section name of the respective accounting layer
// ******************************************************************************
// default: default_accountant

// ******************************************************************************
// name: smtp_incoming_port
// ******************************************************************************
// The port number for incoming SMTP connects.
// ******************************************************************************
// default: 587

// ******************************************************************************
// name: smtp_incoming_address
// ******************************************************************************
// The listening Address to bind the server for incoming SMTP connects.
// ******************************************************************************
// default: 127.0.0.1

// ******************************************************************************
// name: smtp_incoming_ssl
// ******************************************************************************
// True if the incoming SMTP port is ssl wrapped.
// ******************************************************************************
// default: false

// ******************************************************************************
// name: smtp_incoming_require_encryption
// ******************************************************************************
// True if encryption is required for sending messages to this endpoint
// ******************************************************************************
// default: true

// ******************************************************************************
// name: smtp_incoming_user
// ******************************************************************************
// The username to be used if authenticating a client to the MessageVortex 
// incoming queue 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: smtp_incoming_password
// ******************************************************************************
// The password to be used if authenticating a client to the MessageVortex 
// incoming queue 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: smtp_outgoing_port
// ******************************************************************************
// The port number for incoming SMTP connects.
// ******************************************************************************
// default: 25

// ******************************************************************************
// name: smtp_outgoing_address
// ******************************************************************************
// The listening Address to bind the server for incoming SMTP connects.
// ******************************************************************************
// default: 127.0.0.1

// ******************************************************************************
// name: smtp_outgoing_ssl
// ******************************************************************************
// True if the SMTP port is ssl wrapped.
// ******************************************************************************
// default: false

// ******************************************************************************
// name: smtp_outgoing_starttls
// ******************************************************************************
// True if the a statls request should be raised before authenticating
// ******************************************************************************
// default: true

// ******************************************************************************
// name: smtp_outgoing_user
// ******************************************************************************
// The username to be used if authenticating a client to the MessageVortex 
// outgoing SMTP node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: smtp_outgoing_password
// ******************************************************************************
// The password to be used if authenticating a client to the MessageVortex 
// outgoing SMTP node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: pop3_incoming_port
// ******************************************************************************
// The port number for incoming POP3 connects.
// ******************************************************************************
// default: 995

// ******************************************************************************
// name: pop3_incoming_address
// ******************************************************************************
// The listening Address to bind the server for incoming POP3 connects.
// ******************************************************************************
// default: null

// ******************************************************************************
// name: pop3_incoming_ssl
// ******************************************************************************
// True if the incoming POP3 port is ssl wrapped.
// ******************************************************************************
// default: true

// ******************************************************************************
// name: pop3_incoming_starttls
// ******************************************************************************
// True if the incoming POP3 port supports starttls.
// ******************************************************************************
// default: true

// ******************************************************************************
// name: pop3_incoming_user
// ******************************************************************************
// The username to be used if authenticating a client to the MessageVortex 
// incoming POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: pop3_incoming_password
// ******************************************************************************
// The password to be used if authenticating a client to the MessageVortex 
// incoming POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: pop3_outgoing_port
// ******************************************************************************
// The port number to bind to offer an endpoint to fetch vortexMessages
// ******************************************************************************
// default: 995

// ******************************************************************************
// name: pop3_outgoing_address
// ******************************************************************************
// The address to bind to offer an endpoint to fetch vortexMessages.
// ******************************************************************************
// default: 127.0.0.1

// ******************************************************************************
// name: pop3_outgoing_encryption
// ******************************************************************************
// True if endpoint is SSL wrapped
// ******************************************************************************
// default: true

// ******************************************************************************
// name: pop3_outgoing_require_encryption
// ******************************************************************************
// True if endpoint requires encryption (wrapped or STARTTLS) to fetch 
// vortexMessages 
// ******************************************************************************
// default: true

// ******************************************************************************
// name: pop3_outgoing_user
// ******************************************************************************
// The username to be used if authenticating a client to the MessageVortex 
// outgoing POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: pop3_outgoing_password
// ******************************************************************************
// The password to be used if authenticating a client to the MessageVortex 
// outgoing POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: imap_incoming_port
// ******************************************************************************
// The port number for incoming POP3 connects.
// ******************************************************************************
// default: 995

// ******************************************************************************
// name: imap_incoming_address
// ******************************************************************************
// The listening Address to bind the server for incoming POP3 connects.
// ******************************************************************************
// default: null

// ******************************************************************************
// name: imap_incoming_ssl
// ******************************************************************************
// True if the incoming POP3 port is ssl wrapped.
// ******************************************************************************
// default: true

// ******************************************************************************
// name: imap_incoming_user
// ******************************************************************************
// The username to be used if authenticating a client to the MessageVortex 
// incoming POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: imap_incoming_password
// ******************************************************************************
// The password to be used if authenticating a client to the MessageVortex 
// incoming POP3 node 
// ******************************************************************************
// default: null

// ******************************************************************************
// name: imap_outgoing_port
// ******************************************************************************
// The port number to bind to offer an endpoint to fetch vortexMessages
// ******************************************************************************
// default: 995

// ******************************************************************************
// name: imap_outgoing_address
// ******************************************************************************
// The address to bind to offer an endpoint to fetch vortexMessages.
// ******************************************************************************
// default: 127.0.0.1

// ******************************************************************************
// name: imap_outgoing_encryption
// ******************************************************************************
// True if endpoint is SSL wrapped
// ******************************************************************************
// default: true

// ******************************************************************************
// name: imap_outgoing_require_encryption
// ******************************************************************************
// True if endpoint requires encryption (wrapped or STARTTLS) to fetch 
// vortexMessages 
// ******************************************************************************
// default: true

// ******************************************************************************
// name: static_username
// ******************************************************************************
// a static username as credential
// ******************************************************************************
// default: null

// ******************************************************************************
// name: static_password
// ******************************************************************************
// a static password as credential
// ******************************************************************************
// default: null


[credentials]
static_username = vortexuser
static_password = changeThisPassword!

[is_dummy1]
filename = is_dummy1.cfg

[is_dummy2]
filename = is_dummy2.cfg

[is_dummy3]
filename = is_dummy3.cfg

[is_dummy4]
filename = is_dummy4.cfg

[is_dummy5]
filename = is_dummy5.cfg

[is_dummy6]
filename = is_dummy6.cfg

[is_dummy7]
filename = is_dummy7.cfg

[is_dummy8]
filename = is_dummy8.cfg

[is_dummy9]
filename = is_dummy9.cfg

[dummy_accountant]
accounting_implementation = net.messagevortex.accounting.DummyAccountant

[router]
router_implementation = net.messagevortex.router.SimpleRouterImplementation
accountant = dummy_accountant

[initial_blender]
blender_implementation = net.messagevortex.blender.InitialRecipesBlender
router = router
forward_transport = vortex_infrastructure
accountant = dummy_accountant

[dummy_blender]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router

[dummy_blender_1]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy1

[dummy_blender_2]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy2

[dummy_blender_3]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy3

[dummy_blender_4]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy4

[dummy_blender_5]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy5

[dummy_blender_6]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy6

[dummy_blender_7]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy7

[dummy_blender_8]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy8

[dummy_blender_9]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router
identity_store = is_dummy9

[upstream_blender]
blender_implementation = net.messagevortex.blender.DummyBlender
router = router

[client_transport]
transport_implementation = net.messagevortex.transport.MailServer
blender = initial_blender
transport_id = messagevortex@gwerder.net
smtp_incoming_port = 2025
smtp_incoming_address = 127.0.0.1
smtp_incoming_user = username
smtp_incoming_password = password
pop3_outgoing_port = 2110
pop3_outgoing_address = 127.0.0.1
pop3_outgoing_user = username
pop3_outgoing_password = password

[client_transport2]
transport_implementation = net.messagevortex.transport.SmtpImapServer
blender = initial_blender
transport_id = messagevortex@gwerder.net
smtp_incoming_port = -1
smtp_incoming_address = -1
smtp_incoming_user = username
smtp_incoming_password = password
imap_outgoing_port = 2143
imap_outgoing_address = 127.0.0.1

[vortex_infrastructure]
transport_implementation = net.messagevortex.transport.MailConnector
blender = upstream_blender
smtp_outgoing_port = 587
smtp_outgoing_address = horus.gwerder.net
smtp_outgoing_starttls = true
smtp_outgoing_user = messagevortex@messagevortex.net
smtp_outgoing_password = secretPassword
pop3_incoming_port = 110
pop3_incoming_address = horus.gwerder.net
pop3_incoming_starttls = true
pop3_incoming_user = messagevortex@messagevortex.net
pop3_incoming_password = secretPassword

[dummy1]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender_1
transport_id = Dummy1@localhost

[dummy2]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy2@localhost

[dummy3]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy3@localhost

[dummy4]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy4@localhost

[dummy5]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy5@localhost

[dummy6]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy6@localhost

[dummy7]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy7@localhost

[dummy8]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy8@localhost

[dummy9]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy9@localhost

[dummy10]
transport_implementation = net.messagevortex.transport.dummy.DummyTransportTrx
blender = dummy_blender
transport_id = Dummy10@localhost
