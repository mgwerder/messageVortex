// general settings
section_list; transport_setup; default; A comma separated list of transport endpoints sections (senders and receivers)
section_list; blender_setup; default; A comma separated list of  blender sections
section_list; router_setup; default; A comma separated list of  router sections
section_list; credential_source_setup; default; The credential source setup section to be used

// router section specifics
String; router_implementation; net.messagevortex.router.SimpleRouterImplementation; router class to be used
String; accounting_implementation; net.messagevortex.accounting.AccountingImplementation; accounting class to be used

// blnder section specifics
string; blender_implementation;; blender class to be used
string; router; router; the section name of the respective router implementation

// generic transport classes
String; transport_endpoint_receiver; net.messagevortex.transport.pop.Pop3Receiver; The class name of the transport receiver
String; transport_endpoint_Sender; net.messagevortex.transport.smtp.SmtpSender; The class name of the transport sender
string; transport_implementation; ; The class name of the transport impementation
string; blender; blender; The section name of the upstream blender
string; transport_id;; ID of the endpoint

// Incoming SMTP connection listener settings
numeric; smtp_incoming_port              ; 587      ; The port number for incoming SMTP connects.
String ; smtp_incoming_address           ; 127.0.0.1; The listening Address to bind the server for incoming SMTP connects.
boolean; smtp_incoming_ssl               ; false    ; True if the incoming SMTP port is ssl wrapped.
boolean; smtp_incoming_require_encryption; true     ; True if encryption is required for sending messages to this endpoint

// outgoing SMTP connection handlers
numeric; smtp_outgoing_port              ; 25       ; The port number for incoming SMTP connects.
String ; smtp_outgoing_address           ; 127.0.0.1; The listening Address to bind the server for incoming SMTP connects.
boolean; smtp_outgoing_ssl               ; false    ; True if the SMTP port is ssl wrapped.
boolean; smtp_outgoing_starttls          ; true     ; True if the a statls request should be raised before authenticating
String ; smtp_outgoing_user              ;          ;The username to be used if authenticating a client to the MessageVortex outgoing SMTP node
string ; smtp_outgoing_password          ;          ; The password to be used if authenticating a client to the MessageVortex outgoing SMTP node

// incoming POP3 handlers
numeric; pop3_incoming_port             ; 995      ; The port number for incoming POP3 connects.
String ; pop3_incoming_address          ;          ; The listening Address to bind the server for incoming POP3 connects.
boolean; pop3_incoming_ssl              ; true     ; True if the incoming POP3 port is ssl wrapped.
String ; pop3_incoming_username         ;          ; The username to be used if authenticating a client to the MessageVortex incoming POP3 node
string ; pop3_incoming_password         ;          ; The password to be used if authenticating a client to the MessageVortex incoming POP3 node

// outgoing POP3 handlers
numeric  ; pop3_outgoing_port              ; 995      ; The port number to bind to offer an endpoint to fetch vortexMessages
string   ; pop3_outgoing_address           ; 127.0.0.1; The address to bind to offer an endpoint to fetch vortexMessages.
boolean  ; pop3_outgoing_encryption        ; true     ; True if endpoint is SSL wrapped
boolean  ; pop3_outgoing_require_encryption; true     ; True if endpoint requires encryption (wrapped or STARTTLS) to fetch vortexMessages

// incoming IMAPv4 handlers
numeric; imap_incoming_port             ; 995      ; The port number for incoming POP3 connects.
String ; imap_incoming_address          ;          ; The listening Address to bind the server for incoming POP3 connects.
boolean; imap_incoming_ssl              ; true     ; True if the incoming POP3 port is ssl wrapped.
String ; imap_incoming_username         ;          ; The username to be used if authenticating a client to the MessageVortex incoming POP3 node
string ; imap_incoming_password         ;          ; The password to be used if authenticating a client to the MessageVortex incoming POP3 node

// outgoing IMAPv4 handlers
numeric  ; imap_outgoing_port              ; 995      ; The port number to bind to offer an endpoint to fetch vortexMessages
string   ; imap_outgoing_address           ; 127.0.0.1; The address to bind to offer an endpoint to fetch vortexMessages.
boolean  ; imap_outgoing_encryption        ; true     ; True if endpoint is SSL wrapped
boolean  ; imap_outgoing_require_encryption; true     ; True if endpoint requires encryption (wrapped or STARTTLS) to fetch vortexMessages

// credential provider settings
string; static_username      ;; a static username as credential
string; static_password      ;; a static password as credential



