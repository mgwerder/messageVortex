<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" >

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="exp" docName="draft-ietf-messagevortex_protocol-00" ipr="trust200902" xml:lang='en'>
<!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902, or pre5378Trust200902 you can add the attributes updates="NNNN" and obsoletes="NNNN" they will automatically be output with "(if approved)"
-->

    <front>
        <!-- The abbreviated title is used in the page header - it is only necessary if the full title is longer than 39 characters -->

        <title>MessageVortex Protocol</title>

        <author fullname="Martin Gwerder" surname="Gwerder">
            <address>
                <postal>
                    <street>Untere Parkstrasse 9</street>
                    <code>5212</code><city>Hausen</city><region>AG</region>
                    <country>Switzerland</country>
                </postal>
                <phone>+41 56 202 76 81</phone>
                <email>rfc@messagevortex.net</email>

            </address>
            </author>

        <date year="2018"/>

        <area>General</area>

        <workgroup>Internet Engineering Task Force</workgroup>

        <!-- WG name at the upperleft corner of the doc,
             IETF is fine for individual submissions.
          If this element is not present, the default is "Network Working Group",
             which is used by the RFC Editor as a nod to the history of the IETF. -->

        <keyword>SMTP</keyword>
        <keyword>XMPP</keyword>
        <keyword>IMAPrev4</keyword>
        <keyword>MessageVortex</keyword>
        <keyword>Anonymity</keyword>

        <abstract>
            <t>
                MessageVortex Protocol specifies messages that may be embedded into existing message transfer protocols such  as SMTP (<xref target="RFC5321">RFC 5321</xref>) or XMPP (<xref target="RFC6120">RFC 6120</xref>) in order to send them anonymously from peer to peer.
            </t>
            <t>
                The protocol outperforms other protocols by completely decoupling transport from the final transmitter and      receiver party. There is no trust put into any infrastructure except for the infrastructure of the sending and receiving party of a message. Message flow is entirely selected by the creator of the routing block. Participating routing nodes gain no unobvious knowledge about messages even when collaborating. Third party anonymity may be always achieved. Furthermore one out of sender, and receiver anonymity may be achieved as well.
            </t>
        </abstract>
    </front>

    <middle>
        <section title="Introduction">
            <t>Anonymization is hard to achieve. Many attempts have been made but most of them do rely on either a trust upon a dedicated infrastructure, or a specialized networking protocol.</t>
            <t>
                MessageVortex is a protocol which allows to send and receive messages by using a routing block instead of a destination address.
                The routing block is built in such a way that it gives the sender full control over a path a message follows.
            </t>
            <t>
                During transmission a message is continuousl split and reassembled. The operations are built in such a way that they generate either valid traffic or decoy traffic. A generating node is therefore unable to differentiate between the message and decoy traffic.
            </t>
            <t>
                Any Receiver knows after processing whether a message is destined for it or for other nodes.
            </t>
            <t>
                This RFC is structured in such a way that first the terminology is introduced (see <xref target="entities_overview"/>). Next a general overview over the process is given (see <xref target="layer_overview"/>). Lastly the protocol is described in details in the subsequent sections.
            </t>

            <section title="Requirements Language">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
            </section>

            <section title="Protocol Specification">
                <t>The protocol is specified as in <xref target="asn_one"/> in ASN.1 (see <xref target="CCITT.X680.2002"/> and <xref target="CCITT.X208.1988"/>). The blocks are if not otherwise mentioned DER encoded.</t>
            </section>
        </section>

        <section anchor="entities_overview" title="Entities Overview">
            <t>Within these document we refer to the entities as defined below. </t>
            <section anchor="entities_node" title="Node">
                <t>We use the term 'node' to  describe any system connected to other nodes, and supporting the MessageVortex Protocol.</t>
            </section>
            <section anchor="entities_peer" title="Peer Partner">
                <t>We use the term 'peer partner' as two or more message sending or receiving entities. One of these peer partners is the sends a message and all other peer partner do receive a message. Peer partners are message specific. Every peer partner is connected to a node.</t>
            </section>
            <section anchor="entities_keys" title="Encryption keys">
               <t>
                   There are several keys required for a Vortex message. Some of them are used as an Identity and some are message specific.
               </t>
               <section anchor="etities_node_identity" title="Identity Keys">
                   <t>
                       Every participant of the network has a asymmetric key. These keys SHOULD be either EC keys with a minimum length of 384 bits or RSA keys with a minimum length of 2048 bits.
                   </t>
                   <t>
                       The public key needs to be known by all parties writing to or through that node.
                   </t>
               </section>
               <section anchor="etities_keys_peer" title="Peer Key">
                   <t>
                       Peer keys are symetrical keys transmitted with a Vortex message. Peer keys are always known to two nodes sending directly messages to each other and to the creator of the routing block.
                   </t>
                   <t>
                       A peer key is included in the identity block of a Vortex message and in the building instructions for a Vortex message.
                   </t>
               </section>
               <section anchor="etities_keys_sender" title="Sender Key">
                   <t>
                       The sender key is a symmetrical key protecting the identity block of a Vortex message. It is encrypted with the receiving peer key and prefixed to the identity block. This key decouples further identiity and processing information from the previous key.
                   </t>
                   <t>
                       A sender key is known to exactly one peer of a Vortex message and the creator of the routing block.
                   </t>
               </section>
            </section>
            <section anchor="entities_vortex_message" title="Vortex Message">
                <t>
                    We use the term 'Vortex message' for a single transmission between two routing layers. A 'blended Vortex message' describes a Vortex message which has been adapted to the transport layer by the blending layer (see <xref target="layer_overview"/>).
                </t>
                <t>
                    A Vortex message may be sent anonymously. There are however different degrees of anonymity.

                    <list style="symbols">
                        <t>If the sender of a message is not known to anyone else except the sender we refer to that as sender anonymity.</t>
                        <t>If the receiver of a message is not known to anyone else except the receiver we refer to that as receiver anonymity.</t>
                        <t>If neither sender nor receiver can be determined by any other party we refer to that as thrd party anonymity.</t>
                        <t>If a sender or a receiver may be determined as "one aout of a set of &lt;k&gt; entities we refer to it as k-anonymity (for more about this see <xref target="KAnon"/>).</t>
                    </list>
                </t>
                <t>
                    A full vortex message is built out of the following items:
                    <list style="symbols">
                        <t>The peer key (encrypted with a nodes host key) protecting the inner Vortex message.</t>
                        <t>A short padding guaranteeing that a replayed routing block with different content does not look alike.</t>
                        <t>The sender key (encrypted with a nodes host key) protecting the identity and routing block.</t>
                        <t>The identity block (protected by the sender key) containing informations about the ephemeral identity of the sender, replay protection information, header requests (optional), and proofOfWork (optional).</t>
                        <t>The routing block (protected by the sender key) containing informations how subsequent messages are processed, assembled, and blended.</t>
                        <t>The payload block (protected ba the peer key) containing payload chunks to be processed.</t>
                    </list>
                </t>
            </section>
            <section anchor="entities_blocks" title="Blocks">
                <t>We use the term 'block' for an ASN.1 sequence in a packet.  A packet may have any size and and is embedded in the transport protocol. It must not be confused with network packets.</t>
            </section>
            <section anchor="entities_transport_address" title="Transport Address">
                <t>We use the term 'transport adress' for the address required to address the next immediate node on the transport layer.  An email transport layer would have SMTP addresses such as vortex@example.com as transport address.</t>
            </section>
            <section anchor="entities_identity" title="Identity">
                <section anchor="entities_identity_peer" title="Peer Identity">
                    <t>The peer identity may contain the following information of a peer partner:
                        <list style="symbols">
                            <t>Transport address and public key of this identity (if no recipient anonymity is given)</t>
                            <t>Reply blocks for contacting the identity (optional; usually in case of recipient annonymity)</t>
                            <t>Private key (only known by owner of the identity)</t>
                        </list>
                    </t>
                </section>
                <section anchor="entities_identity_ephemeral" title="Ephemeral Identity">
                    <t>Ephemeral identities are temporary identities created on a single node. These identities MUST NOT be connected to any other identity. They allow book keeping for a node. To each ephemeral identity is a workspace assigned. Every ephemeral identity may have multiple quota assigned.
                    </t>
                </section>
                <section anchor="entities_identity_official" title="Official Identity">
                    <t>An official identity may have the following items assigned:
                        <list style="symbols">
                            <t>Reply blocks to be used.</t>
                            <t>A list of assigned ephemeral identities on all other nodes and their projected quotas.</t>
                            <t>A list of known nodes and the respective node identity</t>
                        </list>
                    </t>
                </section>
            </section>
            <section anchor="entities_workspace" title="Workspace">
                <t>Every official or ephemeral identity has a workspace. A workspace consists out of the following elements:
                    <list style="symbols">
                        <t>Zero or more routing blocks to be processed</t>
                        <t>Slots for payload block sequencially numbered</t>
                    </list>
                </t>
            </section>
        </section>

        <section anchor="layer_overview" title="Layer Overview">
            <t>The protocol is designed in four layers as shown in <xref target="fig_layer_overview" /></t>

            <figure align="center" anchor="fig_layer_overview" title="Layer overview">
                <artwork align="center"><![CDATA[
+-------------------------------------------------------------------+
| Vortex Node                                                       |
| +---------------------------------------------------------------+ |
| |                        Accounting                             | |
| |_______________________________________________________________| |
|                                                                   |
| +---------------------------------------------------------------+ |
| |                          Routing                              | |
| |_______________________________________________________________| |
|                                                                   |
| +----------------------------+ +--------------------------------+ |
| |           Blending         | |             Blending           | |
| |____________________________| |________________________________| |
|___________________________________________________________________|
  +----------------------------+ +--------------+ +---------------+
  |          Transport         | | Transport in | | Transport out |
  |____________________________| |______________| |_______________|
               ]]></artwork>
            </figure>

            <t>
                Every participating node MUST implement the layers 'Blending', 'Routing', and 'Accounting'.  There MUST be at least one incomming and one outgoing transport layer available to a node. All blending layers SHOULD be connected to respective Transport layers for sending and receiving packets.
            </t>

            <section anchor="layer_overview_transport" title="Transport Layer">
                <t>The transport layer embedds the blended MessageVortex packets into the data stream of the existing transport layer protocol.</t>
                <t>The transport layer infrastructure SHOULD NOT be specific to anonymous communication and should contain significant parts of non-MessageVortex traffic.</t>
            </section>

            <section anchor="layer_overview_blending" title="Blending Layer">
                <t>The blending layer embedds MessageVortex packets into the transport layer data stream and extracts MessageVortex packets from the transport layer.</t>
            </section>
            <section anchor="layer_overview_routing" title="Routing Layer">
                <t>The Routing Layer expands information contained in MessageVortex packets, processes them, and passes generated  packets to the respective Blending Layer.</t>
            </section>
            <section anchor="layer_overview_accounting" title="Accounting Layer">
                <t>The accounting layer keeps track of all ephemeral identities authorized to use a MessageVortex node. Especially it verifies the available quotas to an ephemeral identity.
                </t>
            </section>
        </section>
        
        <section title="Vortex Message">
            <section title="Overview">
                <t>FIXME</t>
            </section>
            <section title="Prefix Block">
                <t>FIXME</t>
            </section>
            <section title="Inner Message Block">
                <section title="Header Block">
                    <t>FIXME</t>
                </section>
                <section title="Routing Block">
                    <t>FIXME</t>
                </section>
                <section title="Payload Block">
                    <t>FIXME</t>
                </section>
            </section>
        </section>

        <section title="General notes">
            <t>
                The  MessageVortex protocol is modular built. It allows to use different encryption algorithms. For good operation a Vortex node SHOULD always support at least two completely different types of algorithms, paddings, or modes.
            </t>
            <section title="Supported Symmetric Ciphres">
                <t>
                    The following symmetric ciphres MUST be supported by a node:
                    <list style="symbols">
                        <t>AES128</t>
                        <t>AES256</t>
                        <t>CAMELLIA128</t>
                        <t>CAMELLIA256</t>
                    </list>
                    Any standardized key size bigger than the smallest key above SHOULD be supported.
                </t>
                <t>The Twofish cipher MAY be supported.</t>
            </section>
            <section title="Supported Asymmetric Ciphres">
                <t>
                    The following symmetric ciphres MUST be supported by a node:
                    <list style="symbols">
                        <t>RSA (key sizes bigger or equal to 2048)</t>
                        <t>ECC (named curves secp384r1, sect409k1, secp521r1)</t>
                    </list>
                </t>
            </section>
            <section title="Supported MACs">
                <t>
                    The following Message Authentication Codes (MAC)  MUST be supported by a node:
                    <list style="symbols">
                        <t>SHA256</t>
                        <t>RipeMD160</t>
                    </list>
                </t>
                <t>
                    The following MACs SHOULD be supported by a node:
                    <list style="symbols">
                        <t>SHA512</t>
                        <t>RipeMD256</t>
                        <t>RipeMD512</t>
                    </list>
                </t>
            </section>
            <section title="Supported Paddings">
                <t>
                    The following symmetric ciphres MUST be supported by a node:
                    <list style="symbols">
                        <t>PKCS1</t>
                        <t>PKCS7</t>
                    </list>
                </t>
            </section>
            <section title="Supported Modes">
                <t>
                    The following modes  MUST be supported by a node:
                    <list style="symbols">
                        <t>CBC</t>
                        <t>EAX</t>
                        <t>GCM</t>
                    </list>
                    ECB and NONE SHOULD NOT be used.
                </t>
                <t>
                    The following MACs SHOULD be supported by a node:
                    <list style="symbols">
                        <t>CTR</t>
                        <t>CCM</t>
                        <t>OCB</t>
                        <t>OFB</t>
                    </list>
                </t>
            </section>
        </section>

        <section anchor="blending" title="Blending">
            <t>Each node supports a fixed set of blending capabilities. They may be different for incomming and outgoing messages.
            </t>
            <t>
                The following sections describe the blending mechanism. There are currently two blending layers specified. One layer specification for the simple mail transfer protocol (SMTP; See <xref target="RFC5321">RFC 5321</xref>) and one for the Extensible Messaging and Presence Protocol (XMPP; See <xref target="RFC6120">RFC6120</xref>).
            </t>
            <section anchor="blending_general" title="Blending in Attachments">
                <t>
                    There are two types of blending supported when using attachments.
                    <list style="symbols">
                        <t>Plain binary encoding with offset (PLAIN)</t>
                        <t>Embedding with F5 in image (F5)</t>
                    </list>
                </t>
                 <t>
                    For interoperability PLAIN blending MUST be supported. Blending using F5 MAY be supported.
                </t>
                <section anchor="blending_general_plain" title="PLAIN embedding into attachments">
                    <t>
                        Within this document refer to PLAIN blending if a Vortex message is embedded in a carrier file with an offset. An offset of 0 means that the beginning of the payload file is replaced. The routing node MUST choose what payload file is used for the message. A routing node SHOULD use a credible payload type with a high entropy. It furthermore SHOULD prefix a valid header structure to avoid easy detection of the Vortex message. A routing node MAY attach a valid footer to a payload file to improve blending.
                    </t>
                    <t>
                        A node SHOULD offer at least one PLAIN blending method for incomming Vortex messages. A node may offer multiple offsets for incomming Vortex messages.
                    </t>
                </section>
                <section anchor="blending_general_F5" title="F5 embedding into attachments">
                    <t>
                        Within this document we refer to F5 blending if a Vortex message is blended into a JPEG image according to algorithms specified in <xref target="F5"/>. The password for blending may be publicly known. A routing node may advertize multiple passwords. It should be understood that this blending mechanism adds a tenfold of transfervolume to the message. Only small message chunks SHOULD be blended with F5.
                    </t>
                </section>
            </section>
            <section anchor="blending_smtp" title="Blending into an SMTP layer">
                <t>
                    Email messages containig messages MUST be encoded with Multipurpose Internet Mail extensions (MIME) as specified in <xref target="RFC2045">RFC 2045</xref>. Encoding mechanism BASE64 MUST be supported. All sections of an email are tested for the presence of a Vortex message.
                </t>
                <t>
                    A vortex message is present if a block containing the peer key at the known offset of any MIME part decodes correctly.
                </t>
                <t>
                    In order to work properly when blending protocols for sending and receiving SHOULD be supported. For sending SMTP as specified in <xref target="RFC5321">RFC&nbsp;5321</xref> must be used. TLS protection as specified in <xref  target="RFC3207">RFC&nbsp;3207</xref> SHOULD be applied. For obtaining any messages protocols such as POP3 (as specified in <xref target="RFC1939">RFC&nbsp;1939</xref> and <xref target="RFC2595">RFC&nbsp;2595</xref>) or IMAP (as specified in <xref target="RFC3501">RFC&nbsp;3501</xref>) SHOULD be always secured by TLS layers.
                </t>
            </section>
            <section anchor="blending_xmpp" title="Blending into an XMPP layer">
                <t>For interoperability this layer SHOULD be implemented.</t>
                <t>
                  Blending into XMPP traffic is done using the <xref target="XEP-0234"/> extension of the XMPP protocol.
                </t>
                <t>
                    All rules for embedding within the protocol may be taken from the general section. PLAIN and F5 blending is acceptable for this transport layer.
                </t>
            </section>
        </section>

        <section anchor="routing" title="Routing">
            <section anchor="routing_message" title="Vortex Message Processing">
                <section anchor="routing_incomming" title="Processing of incomming Vortex Messages">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_workspace" title="Processing of Routing Blocks in Workspace">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_outgoing" title="Processing of Outgoing Routing Blocks">
                    <t>FIXME</t>
                </section>
            </section>
            <section anchor="routing_header" title="Header Requests">
                <section anchor="routing_header_eid" title="Request New Ephemeral Identity">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_req_msg_quota" title="Request Message Quota">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_req_trans_quota" title="Request Transfer Quota">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_qry_quota" title="Query Quota">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_req_cap" title="Request Capabilities">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_req_nodes" title="Request Nodes">
                    <t>FIXME</t>
                </section>
                <section anchor="routing_header_req_identity_replace" title="Request Identity Replace">
                    <t>FIXME</t>
                </section>
            </section>
            <section anchor="routing_operations" title="Routing Operations">
                <t>FIXME</t>
            </section>
            <section anchor="routing_processing" title="Processing of Vortex Messages">
                <t>FIXME</t>
            </section>
        </section>

        <section anchor="accounting" title="Accounting">
            <section anchor="accounting_create_identity" title="Ephemeral Identity Creation">
                <t>The accounting layer has two major kinds of operations:
                    <list style="symbols">
                        <t>Time based operations (cleanup jobs and initiation of routing)</t>
                        <t>Routing triggered operations (updating quotas, authorizing operations, and pickup of incomming messages.)</t>
                    </list>

                    Implementations MUST provide sufficient locking mechanisms to guarantee integrity of accounting information and workspace at any time.
                </t>
                <section anchor="accounting_timed_gc" title="Time Based Garbage Collection">
                    <t>FIXME</t>
                </section>
                <section anchor="accounting_timed_routing" title="Time Based Routing Initiation">
                    <t>FIXME</t>
                </section>
                <section anchor="accounting_timed_quota" title="Routing Based Quota Updates">
                    <t>FIXME</t>
                </section>
                <section anchor="accounting_routhing_auth" title="Routing Based Authorization">
                    <t>FIXME</t>
                </section>
            </section>
        </section>

        <section anchor="Acknowledgements" title="Acknowledgements">
            <t>FIXME</t>
        </section>

        <section anchor="IANA" title="IANA Considerations">
            <t>This memo includes no request to IANA.</t>

            <t>Additional encryption algorithms, paddings, modes, blendinmg layers, or puzzles MUST be added writing an extension to this or a subsequent RFC. For testing purposes IDs above 1,000,000 should be used.</t>
        </section>

        <section anchor="Security" title="Security Considerations">
            <t>The MessageVortex protocol may be understood more as a toolset than a fixed product. Depending on the usage of the tool set anonymity and security are affected. For a detailed analysis see <xref target="MessageVortexAnalysis"/>.
            </t>
            <t>
                The primary goals for security with in this protocol did rely on the following focus areas:
                <list style="symbols">
                    <t>Confidentiality</t>
                    <t>Integrity</t>
                    <t>Availability</t>
                    <t>Anonymity
                        <list style="symbols">
                            <t>3rd party anonymity</t>
                            <t>sender anonymity</t>
                            <t>receiver anonymity</t>
                        </list>
                    </t>
                </list>

                All these factors are affected by the usage of the protocol. The following sections provide a list of factors affecting the primary goals.
            </t>
            <t>
                The Vortex protocol does not rely on any encryption on the transport layer. Vortex messages are already encrypted. Confidetiality is not affected by protection mechanisms of the transport layer.
            </t>
            <t>
                If a transport Layer supports encryption a Vortex node SHOULD use it to improve privacy of the message.
            </t>
            <t>
                Anonymity is affected by the inner workings of the blending layer in many ways. A Vortex message can not be read by anyone exept the peer nodes and the routing block builde, but the presence of a vortex node message may be detected. This may be done either by detecting the typical high entropy of an encrypted file, broken structures of a carrier file, meaningless content of a carrier file, or the contextless communication of the bleding layer with its peer partner. A blending layer SHOULD minimize the possibility of easy detection by minimizing these effects.
             </t>
             <t>
                A blending layer SHOULD use carrier files with high compression or encryption. Carrier files SHOULD NOT have inner structures so that the payload is comparable to valid content. To achieve undetectability by a human reviewer a routing block builder should use F5 blending instead of PLAIN blending.
             </t>
             <t>
                The two layers routing and accounting have the deepest insight into a Vortex message's inner working. They know the immediate peer sender and the peer recipients of all payload chunks. As decoy traffic is generated by combining chunks and applying redundancy calculations upon them a node may never know whether a malfunction (e.g. when doing a recovery calculation) was intended or not. Therefore a node may not know what traffic was intended to fail or not. It furthermore cannot tell content from decoy traffic apart.
             </t> 
             <t> 
                A routing block builder SHOULD therfore follow the following rules in order not to compromize a Vortex message's anonymity:
                <list style="symbols">
                    <t>All operations applied SHOULD be credible to be invloved in a message transfer.</t>
                    <t>There should be always a sufficient subset of the result of an addRedundancy operation sent to peers in order to allow recovery of the data built.</t>
                    <t>The anonymity set of a message should be sufficiently large in order to witstain legal prosecution of all juridictional entities involved. It has even to witstain if a certain ammount of the anonymity set cooperates.</t>
                    <t>Encryption and decryption SHOULD follow when ever possible the logic. Avoid encrypting a block on a node with one key and decrypting it with a different key on the same or another node.</t>
                    <t>Traffic peaks SHOULD be uniformly distributed within the whole anonymity set.</t>
                    <t>A routing block SHOULD be used for a limmited  number of messages. If used as a message block for the node itself it should be used only once. A block builder SHOULD use the identity replace header request to update reply blocks on a regular base. Implementers shold always keep in mind that the same routing block is identifiable as such by many means.</t>
                    <t>A block builder SHOULD always relay on the newest possible research when chosing Cipher types, paddings, and modes in order to stay secure</t>
                </list>
             </t>
             <t>
                A active adversary can not use other blocks for its own purposes. He may however falsify the result by injecting wrong message chunks or by not sending a message. Such message disruptions may be detected by intentionally routing some information to the routing block builders node. If the Vortex message does not carry the informatin expected the node may safely assume that one of the involved nodes is missbehaving. A block building node MAY calculate reputation for involved nodes over time. A block building node MAY build redundancy paths into a routing block to withstand such malicious nodes.
            </t>
            <t>
                A peer node may try to exhaust a routers quota by sending multiple times the same block. A block builder should therefore take care that a block may not be resent in the intervall where the previous blocks for the transaction are still valid. This guarantees that replayed blocks will stop at the next peer node. This provides good protection against replay based attacks.
            </t> 
        </section>
    </middle>

    <!--  *****BACK MATTER ***** -->

    <back>
        <references title="Normative References">
            <!-- Use of words -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

            <reference anchor="CCITT.X208.1988">
                <front>
                    <title>Specification of Abstract Syntax Notation One (ASN.1)</title>
                    <author>
                        <organization>International Telephone and Telegraph Consultative Committee</organization>
                    </author>
                    <date year="1998" month="11"/>
                </front>
                <seriesInfo name="CCITT Recommendation" value="X.208"/>
            </reference>

            <reference anchor="CCITT.X680.2002">
                <front>
                    <title>Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
                    <author>
                        <organization>International Telephone and Telegraph Consultative Committee</organization>
                    </author>
                    <date year="2002" month="11"/>
                </front>
                <seriesInfo name="CCITT Recommendation" value="X.680"/>
            </reference>

            <reference anchor="XEP-0234">
                <front>
                    <title>XEP-0234: Jingle File Transfer</title>
                    <author surname="Peter" initials="S.A"/>
                    <author surname="Stout" initials="L"/>
                    <date year="2017" month="08" day="24"/>
                </front>
            </reference>

            <reference anchor="F5">
                <front>
                    <title>F5 - A Steganographic Algorithm - High Capacity Despite Better Steganalysis</title>
                    <author initials="A" surname="Westfeld">
                        <organization>TU Dresden</organization>
                    </author>
                    <date year="2001" month="10" day="24"/>
                </front>
            </reference>
            
        </references>

        <references title="Informative References">

            <!-- MIME -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2045.xml"?>
            <!-- IRC -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2802.xml"?>
            <!-- XMPP -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6120.xml"?>
            <!-- SMTP -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml"?>
            <!-- SMTP STARTTLS-->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3207.xml"?>
            <!-- IMAP -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml"?>
            <!-- POP3 -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1939.xml"?>
            <!-- POP3 STARTTLS -->
            <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2595.xml"?>

            <reference anchor="MessageVortexAnalysis" target="https://www.gwerder.net/phd/phd/doc/messageVortex.pdf">
                <front>
                    <title>MessageVortex</title>
                    <author initials="M" surname="Gwerder"/>
                    <date year="2018" />
                </front>
            </reference>
            
            <reference anchor="KAnon">
                <front>
                    <title>k-Anonymous Message Transmission</title>
                    <author initials="L" surname="Ahn">
                        <organization>Carnegie Mellon University</organization>
                    </author>
                    <author initials="A" surname="Bortz">
                        <organization>Carnegie Mellon University</organization>
                    </author>
                    <author initials="NJ" surname="Hopper">
                        <organization>Carnegie Mellon University</organization>
                    </author>
                    <date year="2003" />
                </front>
            </reference>

        </references>

        <section anchor="asn_one" title="The ASN.1 schema for Vortex messages">
            <t>This becomes an Appendix.</t>
        </section>
        <!-- Change Log

            v00 2018-04-19  GwM   Initial version

        -->
    </back>
</rfc>
